PC:
	Click enabling "blackadder" and "nsclick"
	Click's "test.click" responds.
	Blackadder
	Blackadder's "sample.conf" responds.
	Blackadder's C++ and Python libraries, installed but untested.
	Not yet: Blackadder's "Java Native" library
	Not yet: Topology Manager
	Not yet: Documentation/use of "Deployment" script

Network Simulator:
	NS3 from source by itself is successful.
	
	NS3 3.21 (latest) from source, by itself, is successful.
	
	I'm stuck at getting NS3 to build when I've added Blackadder 'module'.
	
	Followed Blackadder's "NS3 Support" instructions:
	NS3 3.21 warns some minor missing command line switches.
	NS3 3.21 stops at Blackadder's "wscript" ("NS3 module script") file with "ImportError: No module named Options"
		I can find an "Options.py" in ".waf-[...]/waflib"
			Attempting to set "PYTHONPATH" here: "if Options.options.disable_nsclick", "no attribute named disable_nsclick"
			Copying Options.py next to wscript: same error.
		The attribute corresponds to default/possible command line arguments, but the one I'm getting via PATH/copying is 'different' to the one waf uses.
		
		MODIFYING "waflib" to get it to work
			This seems really bad for setup instructions! "Run it once, fail, modify this file in a hidden folder..."
			Works, getting past this stage.
			"AttributeError: 'BuildContext' object has no attribute 'new_task_gen'"
				Modified lines in wscript to 'update to NS3 3.21'
			
		C++ compile errors:
			"[1178/2417] cxx: src/blackadder/model/pub-sub-application.cc -> build/src/blackadder/model/pub-sub-application.cc.1.o
			../src/blackadder/model/pub-sub-application.cc: In member function ‘void ns3::PubSubApplication::DoStart()’:
			../src/blackadder/model/pub-sub-application.cc:39:9: error: ‘DoStart’ is not a member of ‘ns3::Application’
	    	     Application::DoStart();
		         ^
			Waf: Leaving directory `/home/jack/Desktop/Project/repos/ns-allinone-3.21/ns-3.21/build'
			Build failed
			 -> task in 'ns3-blackadder' failed (exit status 1): 
			 {task 140028428085840: cxx pub-sub-application.cc -> pub-sub-application.cc.1.o}
		I can't find any reference on this, no idea where to start in modifying actual codebase.
		
	Attempted to use NS3 3.15 that Blackadder was "tested on"
		"Build failed
		 -> task in 'ns3-network' failed (exit status 1):"
		According to: http://ns-3-users.narkive.com/bzwpcBHL/error-of-building-ns-3-15-on-ubuntu-13-10
		Some change in GCC's 'strictness' between Ubuntu versions means that NS3 3.15 won't build with 'latest' Ubuntu versions.
	
	So, three options:
	
	Porting Blackadder to latest NS3 & latest Ubuntu.
		- Probably the best for letting other people run the simulations, etc later
		- I'm not sure how drastic the changes I can make ("modify this hidden Python script", "replace/modify C++ source")
		- I'm running into never-seen-before compile errors
			- I've been unpicking them, but too slowly to be on time right now.
			- I do think I can do this, but I will need some help looking over complicated parts of the codebase.
	
	Switch (or VM) to Ubuntu 12.10 or similar, run NS3 3.15 / equivalent Click.
		- This is likely to work, maybe the quickest, since it's the version HowTo reports success with.
		- Doesn't sound good for anyone else wanting to make simulations.
		- However, might only be needed is only in simulation rather than Blackadder in general.
		
	Port NS 3.15 to latest Ubuntu
		- Even larger project, no idea where to start.
		
Simulations:
	Unable to start.
	
According to: http://wiki.fp7-pursuit.eu/uploads/2/21/INFSO-ICT-257217_PURSUIT_D3.5_Final_integrated_prototype.pdf
	They had "Ports for Android and OpenWRT" and "Video/Voice-over-Blackadder" in 2010.
	No public instructions or information.
	
	
Router:
	Installed OpenWRT on the router via TFTP
		- This method seems 'most generic' when the router supports it.
		
	Cross-compiled "Hello World" as a package, from public but non-official tutorials.
	Able to send, install, run, uninstall packages.
	
	Cross-compiled Click as a package, from public but non-official work.
	- Slightly more detailed instructions for using SDK/using this specific package
	
	I'm stuck at cross-compiling (Click+Blackadder) as a package for the router.
	
	Added custom lines to Click package that follow HowTo instructions:
		# First, make? + make install Click
		$(call Build/Install/Default, install)
		
		# From Build/Prepare in hello_openwrt
		$(CP) ./src/* $(BUILD_DIR)/
		
		# Then, configure, make (+ make install?) Blackadder
		# (Blackadder's configure needs to happen after building click to work)
		(cd $(BUILD_DIR)/blackadder/src; \
			./configure \
				--disable-linuxmodule \
				--with-click=$(PKG_INSTALL_DIR)/usr \
				--prefix=$(PKG_INSTALL_DIR)/usr \
		)
		
		$(MAKE) -C $(BUILD_DIR)/blackadder/src
		
	I get "Undefined reference to [lots of click components]" errors on pretty much every file compiled.
	BUT it doesn't say "not a valid click install" and it's running click-buildtool
	so clearly it's finding something useful.
	
	Directory structure in SDK:
	[sdk]/
		package/
			click_blackadder/ (symlink to I-C-N/openwrt_packages/click_blackadder/)
				Makefile
				src/
					blackadder/
						(fresh clone of repository)
		build_dir/
			[target]/
				blackadder/
					(copied from package/)
				click-20140803/
					[contents git as of Aug 2014]
					ipkg-install/
						usr/
							All of these are present and have useful files:
							bin/
								click
								click-buildtool
								...
							include/
								click/
									algorithm.hh
								...
							lib/
								libclick.a
								...
							man/
								...
							share/
								click/
									src/ (symlink back to click-20140803)
									config.mk (seems to be what it looks for as "a valid install" for "--with-click"
									...
	
Android:
	I haven't started.

Porting Blackadder and its dependencies to an OpenWRT router.
-----

Final Deployment Instructions
-----------------------------
To deploy Blackadder on a router, see README in Information-Centric-Networking/openwrt_packages/click_blackadder.
You do not need to install I-C-N/openwrt_packages/click - it was just an intermediate stage in creating the other.

Progress
--------
Starting point:
a. "packages-on-openwrt" + tutorial Makefile there

b. click-only Makefile, last updated 2010 (4+ years)
	[1] https://github.com/openwrt-es/barrier-breaker-openwrt-packages/blob/master/net/click/Makefile

c. "blackadder-on-pc" instructions


Information-Centric-Networking/openwrt_packages/click:
	Combining the first two, to cross-compile Click ("patches" from b) from a local copy of source (a)
	- SOURCE_URL in (b) no longer works
	- Local copy needed since Blackadder requires "create a symbolic link in click source..."
		
Blackadder build has this step:
	./configure --disable-linuxmodule --with-click=$HOME/.../builds/click --prefix=$HOME/.../builds/click

I need to know if it actually uses anything from the "built" click
	This wouldn't follow cross-compiler's "configure all, then build all, then install all"
or if it just sets directories to copy to
	Only modifications to "install" needed.
	
NEEDED:
(from blackadder's generated Makefile)
	# Require Click prefix settings.
	# Generally, you will provide a '--with-click=CLICKPREFIX' option, and set:
	clickbuild_prefix := /home/jack/Desktop/Project/builds/click
	include /home/jack/Desktop/Project/builds/click/share/click/config.mk
	
Difficult.
	




Extra Notes
----------

Up to 22/12/14:
Aim so far:
Make a "Package Makefile"
that acts on symlinked Click and Blackadder repositories
that makes a single "cross-compiled installable ipkg"
when running "SDK Makefile".

OK.


EXCERPTS FROM PLACES

http://www.read.cs.ucla.edu/click/faq#how-do-i-cross-compile-userlevel-click
"How do I cross compile userlevel click?"

Looks OK. 

https://github.com/openwrt-es/barrier-breaker-openwrt-packages/blob/master/net/click
"Click for Barrier Breaker" cross-compiling does exist!
Script is very old - "DESCRIPTION" thing.


"If you are _building_ compiler tools for cross-compiling, you should
use the option `--target=TYPE' to select the type of system they will
produce code for.

   If you want to _use_ a cross compiler, that generates code for a
platform different from the build platform, you should specify the
"host" platform (i.e., that on which the generated programs will
eventually be run) with `--host=TYPE'."


Blackadder installs into the Click folder
("Package Makefile" should do the same thing)


Dependencies from ba-on-pc all look like they're for compiling only or statically added
(So I shouldn't have to make more packages)

Directories:
	blackadder_openwrt/
		repos/
			click              Symlink to click repo
			blackadder         Symlink to blackadder repo
		Makefile               Equiv. of "Second Step"
		
I should either have a "general" makefile that does the whole "on PC" one (~ "first step")
or just put all those instructions into "second step"

Symlinks in Git work OK.
(Anyone else will have to remake them, but it shows where they're 'supposed' to go)


"./configure --enable-nsclick --enable-blackadder --disable-linuxmodule --prefix=$HOME/.../builds/click"

=>
./configure --disable-linuxmodule prefix??


"userlevel click" using Wifi? Example says it can
"Packaging a service" section looks useful.


"define Build/Configure
	(cd $(PKG_BUILD_DIR); \
		rm -rf config.{cache,status} ; \
		./configure \
			--prefix=/usr \
			--target=$(GNU_TARGET_NAME) \
			--host=$(GNU_HOST_NAME) \
			--build=$(GNU_BUILD_NAME) \
			--enable-tools=mixed \
			--enable-userlevel \
			--enable-wifi \
			--enable-fixincludes \
			--disable-linuxmodule \
	)
endef"

http://wiki.fp7-pursuit.eu/uploads/f/f6/INFSO-ICT-257217_PURSUIT_D3.4_Integration_and_Demonstration_Plan.pdf

"the kernel version of the Blackadder implementation"
- What I've done so far for PC is the user-level version.

"i) Compile and strip Click for the selected target
ii) Compile and strip the kernel version of Blackadder for the selected target
iii) Enable required support so that the deployment script configures OpenWRT
nodes."

"and strip" - "remove statically linked but unusable bloat"

http://wiki.fp7-pursuit.eu/uploads/2/21/INFSO-ICT-257217_PURSUIT_D3.5_Final_integrated_prototype.pdf
^ mentions that an OpenWRT port (having achieved those steps) does exist, but doesn't say where to find it.
  
1. Sending files to router
  [1] http://unix.stackexchange.com/questions/106480/how-to-copy-files-from-one-machine-to-another-using-ssh
  [2] https://help.ubuntu.com/community/SSHFS
  
  Installation:
    sudo apt-get install sshfs
  
    "Add yourself to 'fuse' group" [2] - I used terminal method
  
  Test sending a file:
    Create working folders:
    (PC)
      $HOME/.../transfer_mount
    
    (Router)
      ~: root's home directory. Others might work if user accounts are set up.
      ~/transfer_test
      ~/transfer_test/existing
    
    (PC, transfer/)
      sshfs -o idmap=user root@192.168.1.1:/transfer_test $HOME/.../transfer_mount
      * "Mount transfer_test on router to transfer_mount on PC.
      * -o idmap: "files owned by the remote host (root@192) will appear on PC as owned by PC"
      
  
  
TEST
jack@galillean:~/Desktop/Project/transfer$ scp -r ~/Desktop/Project/transfer/testsend root@192.168.1.1:/transfer_test
root@192.168.1.1's password: 
file                                          100%    0     0.0KB/s   00:00

root@OpenWrt:~/transfer_test# ls
existing

^ Expected directory "testsend" to be on router...

23/12/14
	make is dereferencing all my symbolic links, which is odd:
	[2] http://stackoverflow.com/questions/8390502/how-to-make-gnu-make-stop-de-referencing-symbolic-links-to-directories
	
	A different "Error 2"
	
	"make clean" on click REPOSITORY didn't help
	
	"Build 'clickclick' with 'make MINDRIVER=click'."
	
	
14/01/15
	I wasn't able to fix "error 2".
	
	Found a new "Download then compile click" Makefile from Aug 2014 as a starting point
	1. Make sure it still works
		"click_20140803-1_ar71xx.ipk" generated OK!
		
		It downloads/extracts click source (a specific revision from Aug 2014) into SDK "build_dir/[target]/click-20140803"
		
		So I need to create symlinks to that location?
		- Symlinks were for NS3 compat, not router.
	
	3. Add Blackadder, trying out "configure/make click then configure/make blackadder" change.
		Several false starts due to mistakes with "click-[version]" vs "click", "PKG_BUILD_DIR" vs "BUILD_DIR", etc
		
		Got to Blackadder building stage...
		
		CMD used:
		(cd /home/jack/Desktop/Project/Downloads/OpenWrt-SDK-ar71xx-for-linux-x86_64-gcc-4.8-linaro_uClibc-0.9.33.2/build_dir/target-mips_34kc_uClibc-0.9.33.2/blackadder/src;
		./configure
		--disable-linuxmodule
		--with-click=/home/jack/Desktop/Project/Downloads/OpenWrt-SDK-ar71xx-for-linux-x86_64-gcc-4.8-linaro_uClibc-0.9.33.2/build_dir/target-mips_34kc_uClibc-0.9.33.2/click-20140803/ipkg-install/usr
		    --prefix=/home/jack/Desktop/Project/Downloads/OpenWrt-SDK-ar71xx-for-linux-x86_64-gcc-4.8-linaro_uClibc-0.9.33.2/build_dir/target-mips_34kc_uClibc-0.9.33.2/click-20140803/ipkg-install/usr 		)
		    
		"Undefined reference to..." errors on pretty much every file.
		"/src/blackadder" is a LINK right now, even when copied to build_dir so won't be cleaned when "sdk/make clean" is ran (even though the copy-of-link is deleted)
		
		Trying "make clean" in blackadder/src then rerun
		Did not fix.
	
	4. This is "blackadder/src"... I still probably need "blackadder/TopologyManager" + other programs using the library to cross-compile easily on the router as well.
		
	
	(Possible: Try with latest Click from repository instead of a specific version)
